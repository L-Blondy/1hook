import eslint from "@eslint/js";

/** @type {any} */
export const config_js = {
  rules: {
    ...eslint.configs.recommended.rules,
    "block-scoped-var": 2,
    "default-param-last": 0,
    "getter-return": 2,
    "grouped-accessor-pairs": 1,
    "max-params": ["error", 4],
    "new-cap": 1,
    "no-alert": 2,
    "no-case-declarations": 1,
    "no-class-assign": 2,
    "no-cond-assign": 0,
    "no-console": 1,
    "no-const-assign": 2,
    "no-constructor-return": 2,
    "no-dupe-args": 2,
    "no-duplicate-imports": 1,
    "no-eq-null": 1,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-semi": 0,
    "no-implied-eval": 2,
    "no-invalid-this": 2,
    "no-mixed-operators": 0,
    "no-multi-assign": 2,
    "no-multi-str": 2,
    "no-template-curly-in-string": 1,
    "no-unused-vars": 0,
    "no-var": 0,
    "prefer-template": 0,
    "prefer-const": 0,
    "no-ex-assign": 2,
    "spaced-comment": [
      1,
      "always",
      {
        markers: ["/"],
      },
    ],
    eqeqeq: 2,
    "@typescript-eslint/ban-types": 0,
    "@typescript-eslint/ban-ts-comment": 0,
    "@typescript-eslint/unbound-method": 0,
    "@typescript-eslint/no-empty-function": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-namespace": 0,
    "@typescript-eslint/no-unnecessary-condition": 2,
    "@typescript-eslint/no-unsafe-member-access": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/no-unsafe-call": 2,
    "@typescript-eslint/no-unsafe-return": 0,
    "@typescript-eslint/no-unsafe-argument": 0,
    "@typescript-eslint/no-base-to-string": 0,
    "@typescript-eslint/no-redundant-type-constituents": 0,
    "@typescript-eslint/no-unused-vars": [
      1,
      {
        argsIgnorePattern: "^_",
        varsIgnorePattern: "^_",
        caughtErrorsIgnorePattern: "^_",
      },
    ],
    "@typescript-eslint/no-unused-expressions": [
      2,
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
        enforceForJSX: true,
      },
    ],
  },
};
